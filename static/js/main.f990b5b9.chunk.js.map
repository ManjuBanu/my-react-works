{"version":3,"sources":["manju.jpg","logo.svg","App.tsx","serviceWorker.ts","form-table.tsx","virtual_dom.tsx","mounting.tsx","apicall.js","myself.tsx","link-routing.tsx","redux-store.js","react-redux.tsx","components/cards/cards.tsx","components/card-list/card-list.tsx","components/search-bar/search-bar.tsx","card-show.js","components/UserInput/UserInput.js","components/UserOutput/UserOutput.js","assesment1.js","components/Validation/Validation.js","components/Char/Char.js","charBox.js","components/Persons/person-component.js","person.js","routing.tsx","index.tsx"],"names":["module","exports","App","className","href","target","src","logo","alt","Boolean","window","location","hostname","match","MyForm","props","onChangeHandler","event","setState","newItem","id","state","list","length","name","value","console","log","onSubmitForm","preventDefault","push","default","editRow","key","bind","onSubmit","this","type","onChange","map","index","onClick","React","Component","UpdateTime","onTimeChange","setInterval","localDate","Date","toLocaleDateString","locatTime","toLocaleTimeString","Mounting","clickMe","Math","random","imgshow","divshow","lifeCycleClick","cycleshow","_nextProps","_NextState","Fragment","manju","_prevProps","_prevState","_snapShot","_error","_info","axios","defaults","baseURL","StyledDiv","styled","div","Button","button","ApiAxios","get","then","result","data","getResults","post","title","body","userId","postResults","slice","x","StyledList","Styeldli","ContactMe","AboutMe","ChildRender","LinksRouting","menu","path","i","to","children","CounterintialState","count","counterReducer","action","pushPopReducer","pop","reduxStore","redux","counter","pushPop","ReduxRedux","increment","output","dispatch","getState","decrement","store","Card","monster","email","CardList","monsters","SearchBar","placeholder","handleChange","CardShow","e","searchField","fetch","response","json","users","filteredMonsters","filter","filteredMonster","toLowerCase","includes","UserInput","style","border","margin","height","width","padding","boxSizing","onInputChange","currentName","UserOutput","backgroundColor","textAlign","userName","surName","InstructionDiv","boxShadow","NameDiv","Assesment1","inputChangeHandler","inputSurNameChangeHandler","validation","validationMessage","inputLength","char","display","clicked","character","charBoxDiv","CharBox","userInput","inputChangedHandler","deleteCharHandler","text","split","splice","updatedText","join","charList","ch","Char","Validation","PersonComponent","click","age","changed","Person","persons","otherState","showPersons","nameChangedHandler","personIndex","findIndex","p","person","deletePersonHandler","togglePersonsHandler","doesShow","assignedClasses","RenderPart","Routing","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f990b5b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/manju.515d84cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <a  href=\"https://reactjs.org\" target=\"_blank\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" \n          /></a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport 'react-table-6/react-table.css';\n\n\nexport class MyForm extends React.Component<{}, { list: any, newItem: any, default: string }>{\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            list: [],\n            newItem: {\n                id: 0,\n                name: '',\n            },\n            default: '',\n        };\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.editRow = this.editRow.bind(this);\n    }\n\n    onChangeHandler = (event: any) => {\n        //let value = event.target.name\n        this.setState({\n            newItem: {\n                id: this.state.list.length,\n                name: event.target.value\n            }\n        }, () => { console.log('name get value', this.state) })\n        console.log('state value', this.state);\n        console.log('get value by name', event.target);\n    }\n\n    onSubmitForm = (event: any) => {\n        event.preventDefault();\n        console.log('new item',this.state.newItem.name);\n        if (this.state.newItem.name.length > 0) {\n            this.state.list.push(this.state.newItem);\n        } else {\n            event.preventDefault();\n            return false;\n        }\n        this.setState({\n            newItem: {\n                name: this.state.default,\n            }\n        })\n    }\n\n    editRow  = (key:any) => {\n        console.log('editrow', key);\n    }\n    render() {        \n        return (\n            <>\n            <form className=\"FormDiv\" onSubmit= {this.onSubmitForm}> \n              <h1>Welcome!!!</h1>\n              <label>Name</label>\n              <input\n                type=\"text\" onChange = {this.onChangeHandler}\n              />\n              {/* input[type=password]\n              input[type=number] */}\n               <button className='btn-primary'>Submit</button>\n            </form>\n\n            <table>\n              <thead>\n                  <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.list.map((value: any, index: any) => {\n                        return<tr id={index}>\n                            <td>{value.id}</td>\n                            <td>{value.name}</td>\n                            <td><button className='btn  btn-info' onClick ={this.editRow}>Edit</button></td>\n                            <td><button className='btn  btn-danger'>Delete</button></td>\n                            </tr>\n            })}\n           </tbody>\n            </table>\n            </>\n          );\n   }\n}","import React from 'react';\nimport './App.css';\n\n\nexport class UpdateTime extends React.Component<{}, { localDate: any, locatTime: any }>{\n    constructor(props: any) {\n        super(props);\n        this.state = {\n         localDate:new Date().toLocaleDateString(),\n         locatTime:new Date().toLocaleTimeString(),\n        };\n        this.onTimeChange = this.onTimeChange.bind(this);\n    }\n\n onTimeChange:any = () =>{ setInterval(() => {\n\n     console.log('triggered');\n        this.setState({\n            localDate:new Date().toLocaleDateString(),\n         locatTime:new Date().toLocaleTimeString(),\n        })\n    }  \n    ,2000);\n}\n\n\n    render(){\n        return(\n            <div className=\"virtualDom\">\n            <h1>VIRTUAL DOM </h1>\n            <h3>It will only render the changes</h3>\n            <p>{this.state.localDate}</p>\n            <p onChange={this.onTimeChange()} >{this.state.locatTime}</p>\n            </div>\n        )\n    }\n}\n\n\n\n// export  function UpdateTime() {\n//     const localDate = new Date().toLocaleDateString();\n//     const locatTime =new Date().toLocaleTimeString();\n//     return(\n//     <div className=\"virtualDom\">\n//     <h1>VIRTUAL DOM </h1>\n//     <h3>It will only render the changes</h3>\n//     <p>{localDate}</p>\n//     <p>{locatTime}</p>\n//     </div>\n// );\n//     }\n// setInterval(UpdateTime,2000);\n\n\n\n\n    ","import React from 'react';\nimport manju from './manju.jpg';\n\nlet counter =0;\nconst count=counter+1;\nexport class Mounting extends React.Component<{}, {name:any, imgshow:any, divshow:any,cycleshow:boolean}>{\n    \n    constructor(props:any){\n        super(props);\n        this.state = {\n            name: \"my name\" ,\n            imgshow: false,\n            divshow:false,\n            cycleshow:false,\n        }\nconsole.log(\"constructor ::\" + count);\n\n    }\n   \n    clickMe = ()=>{\n        const name= Math.random();\n        this.setState({name:\"App\"+name,\n        imgshow : !this.state.imgshow,\n        divshow : !this.state.divshow\n        })\n    }\n\n    lifeCycleClick = ()=>{\n        const name= Math.random();\n        this.setState({name:\"App\"+name,\n        cycleshow : !this.state.cycleshow\n        })\n    }\n\n    // static getDerivedStateFromProps(){\n    //     counter=counter++,\n    //     console.log(\"getDerivedStateFromProps :: \"+ counter);\n    //     return this;\n    // }\n    shouldComponentUpdate(_nextProps: any,_NextState: any){\n        console.log(\"shouldComponentUpdate :: \"+ counter+1);\n        return true;  //if it return false remaining methods won't run\n    }\nrender(){\n    console.log(\"render\")\n    return(\n        <React.Fragment>\n        <div className=\"mountingDiv\">\n            {this.state.imgshow && \n            <>\n            <h2>I am here !!!</h2>\n            <img src={manju} className=\"mypic\" alt=\"logo\" \n            />\n            \n            </>\n                }\n                <br/>\n            <button onClick={this.clickMe}>ME?</button>\n            {this.state.divshow && \n            <div className=\"mountingDiv1\">\n                {this.state.cycleshow &&\n            <>\n            <h3>LifeCycle</h3>\n            <p>Let's see Component Life Cycle in console</p>\n            </>}\n            <button onClick={this.lifeCycleClick}>CLF Click</button>\n          </div>}\n        </div>\n        </React.Fragment>\n    );\n}\ncomponentDidMount(){\n    console.log(\"ComponentDidMount  \")\n}\n\ngetSnapshotBeforeUpdate(_prevProps: any,_prevState: any ){\nconsole.log(\"getSnapshotBeforeUpdate :: \" +count);\nreturn null;\n}\n\ncomponentDidUpdate(_prevProps: any,_prevState: any, _snapShot: any){\n    console.log(\"componentDidUpdate :: \" +count); \n}\ncomponentWillUnmount(){\n    console.log(\"componentWillUnmount :: \" +count); \n}\n\ncomponentDidCatch(_error: any , _info: any){\n    console.log(\"componentDidCatch :: \" +count); \n}\n}\n","import React from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components'\n\naxios.defaults.baseURL = 'https://jsonplaceholder.typicode.com/';\n\nconst StyledDiv = styled.div`\nbackground-color:goldenrod;\nwidth:400px;\ntext-align: center;\nfloat: left;\n`;\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid black;\n  color: whitesmoke;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n`;\n\nexport class ApiAxios extends React.Component{\n    constructor(){\n        super();\n        this.state ={\n            getResults :[],\n            postResults :{title:'INITIAL'}\n        }\n    }\n\nrender(){\n    var size = 10;\n    return(\n        <StyledDiv>\n            <h2>API calls Using Axios</h2>\n            <Button onClick={this.get}>GET</Button>\n            <Button onClick={this.post}>POST</Button>\n            {this.state.postResults.title}\n            {this.state.getResults.slice(0, size).map(x =><div>{x.title}</div>)}\n        </StyledDiv>\n    );\n}\nget = ()=>{\naxios.get('/posts').then(result =>{\n    console.log('getresults',result.data);\n    this.setState({getResults : result.data})\n})\n}\npost = ()=>{\n    axios.post('/posts',{ \n        title:'POST',\n        body:'hgghvkjhb',\n        userId:1,\n    }).then(result =>{\n        console.log('postresults',result.data);\n        this.setState({postResults : result.data})\n    })\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport manju from './manju.jpg';\n\n\nconst StyledList = styled.div`\nlist-style-type: none;\n  margin-left: 30px;\n  padding: 0;\n  text-align: left;\n  float: left;\n`;\n\nconst  Styeldli =styled.div`\ndisplay: block;\ncolor: #000;\npadding: 8px 16px;\ntext-decoration: none;`;\n    \n\nconst ContactMe = styled(StyledList)`\nbackground-color:gray;\nfloat:right;\n`;\n\nconst Button = styled.button`\n  background: rebeccapurple;\n  border-radius: 3px;\n  border: 2px solid black;\n  color: whitesmoke;\n  margin:20px;\n  padding: 0.25em 1em;\n`;\n\nexport class AboutMe extends React.Component<{}, {divshow:boolean,}>{\n    constructor(props:any){\n        super(props);\n        this.state = {\n            divshow:false,\n        }}\n    clickMe = ()=>{\n        this.setState({\n            divshow : !this.state.divshow,\n        })\n        }\n\n    render(){\n        return(\n            <div className=\"AboutMe\">\n                <h1>WANT TO KNOW ABOUT ME !!!</h1>\n                <img src={manju} className=\"mypic1\" alt=\"logo\" />\n                <StyledList>\n                    <Styeldli>\n                        Name :: Manju Mala Devi M\n                    </Styeldli>\n                    <Styeldli>\n                        D.O.B :: 08/01/1996\n                    </Styeldli>\n                    <Styeldli>\n                        Nationality :: Indian\n                    </Styeldli>\n                    <Styeldli>\n                        Languages :: Tamil & English\n                    </Styeldli> \n                    <Styeldli>\n                        Qualification :: B.Tech - Information Technology\n                    </Styeldli> \n                    <Button onClick={this.clickMe}>Contact</Button>\n                    {this.state.divshow && \n                        <ContactMe>\n                    <Styeldli>\n                        Phone :: 0463-243454\n                    </Styeldli>\n                    <Styeldli>\n                        Mobile :: 9500481384\n                    </Styeldli>\n                    <Styeldli>\n                        Email :: manjubanu08@gmail.com\n                    </Styeldli>\n                    <Styeldli>\n                        Street :: 13/2-19, Shallom school street,\n                    </Styeldli> \n                    <Styeldli>\n                        City :: Tirunelveli\n                    </Styeldli> \n                    <Styeldli>\n                        State :: TamilNadu\n                    </Styeldli>                   \n                    </ContactMe>\n                        }                 \n                    </StyledList>\n                    \n            </div>\n        );\n    }\n}","import React from 'react';\nimport { BrowserRouter,Link, Route } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\nconst ChildRender = styled.div`\nwidth:100px;\nheight:100px;\nbackground-color:lightpink;\ntext-align:center;\n`;\n\n\nexport class LinksRouting extends React.Component{\n    constructor(props:any){\n        super(props);\n        this.state={\n            name:'Links'\n        }\n    }\n\n\n    menu=[{name:'1',path:'/1'},{name:'2',path:'/2'},{name:'3',path:'/3'} ];\n\n    render(){\n        // const navigate =()=>{\n        //     this.props.history\n        // }\n        return(\n            <BrowserRouter>\n            {this.menu.map((x,i)=><Link to={x.path} key={i}>{x.name}<br/></Link>)}\n            <ChildRender>\n            <switch>\n      <Route path=\"/1\" children={1}/>\n      <Route path=\"/2\" children={2} />\n      <Route path=\"/3\" children={3} />\n      <Route path=\"/4\" children={4} />\n      <Route path=\"/5\" children={5} />\n      {/* <Button onclick={navigate}></Button> */}\n      </switch>\n      </ChildRender>\n            </BrowserRouter>\n           \n        );\n    }\n}","import * as redux from 'redux';\n\n//Action\nexport const INCREMENT = 'increment';\nexport const DECREMENT = 'decrement';\n\nconst CounterintialState ={\ncount:0,\n}\n\nconst counterReducer = (state = CounterintialState,action) =>{\nswitch(action.type){\n    case INCREMENT:{\n        return{...state, count: state.count+1};\n        break;\n    }\n    case DECREMENT:{\n        return{...state, count:state.count-1};\n        break;\n    }\n    default:{\n        return state;\n    }\n}\n}\n\nconst pushPopReducer =(state=[],action)=>{\n    switch(action.type){\n        case 'push':{\n            const data=[...state];\n            data.push(action.value);\n            return [...data];\n            break;\n        }\n        case 'pop':{\n            const data=[...state];\n            data.pop();\n            return [...data];\n            break;\n        }\n    }\n}\n\nconst RootReducer = (state={},action)=>{\nreturn{\n    counter:counterReducer(state.counter,action),\n    pushPop:pushPopReducer(state.pushPop,action),\n}\n}\n\nexport const reduxStore = redux.createStore(RootReducer);\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { reduxStore, INCREMENT, DECREMENT } from './redux-store';\nimport { Provider } from 'react-redux';\n\n\nexport class ReduxRedux extends Component{\n    increment = ()=>{\n        const output=reduxStore.dispatch({type:INCREMENT});\n        console.log(reduxStore.getState())\n        return output;\n    }\n    decrement =()=>{\n        reduxStore.dispatch({type:DECREMENT});\n        console.log(reduxStore.getState())\n    }\n    push=()=>{\n        reduxStore.dispatch({type:'push',value:Math.random()});\n        console.log(reduxStore.getState())\n    }\n    pop=()=>{\n      reduxStore.dispatch({type:'pop'});\n        console.log(reduxStore.getState())\n        \n    }\n\n    render(){\n        return(\n            <Provider store={reduxStore}>\n            <div className=\"virtualDom\">\n           <h2>ReactRedux</h2>\n           <h5>Hit the button to see the chenges</h5>\n           <button onClick={this.increment}>INCREMENT</button><br></br>\n           <button onClick={this.decrement}>DECREMENT</button><br></br>\n           <button onClick={this.push}>PUSH</button><br></br>\n           <button onClick={this.pop}>POP</button>\n            </div>\n            </Provider>\n        )\n    }\n}\n// const mapDispatchToProps = (dispatch)=>{\n//     return{\n//         increment:()=>{\n//             reduxStore.dispatch({type:INCREMENT});\n//             console.log(reduxStore.getState())\n//         },\n//         decrement:()=>{\n//             reduxStore.dispatch({type:DECREMENT});\n//             console.log(reduxStore.getState())\n//         },\n//         // push:()=>{\n//         //     reduxStore.dispatch({type:'push',value:Math.random()});\n//         //     console.log(reduxStore.getState())\n//         // },\n//         // pop:()=>{\n//         //   reduxStore.dispatch({type:'pop'});\n//         //     console.log(reduxStore.getState())\n            \n//         // }\n//     }\n//     }\n//     const mapStateToProps = (state)=>{\n//         return{\n//             connectCounter:state.counter.count,\n//         }\n//     }\n\n//     export default connect(mapStateToProps,mapDispatchToProps)(Hello);\n\n\n    ","import React from 'react';\nimport './cards.css';\n\nexport const Card = (props:any) =>(\n    <div className='card-container'>\n        <img alt=\"monsters\" src={`https://robohash.org/E${props.monster.id}X.png?set=set4&size=150x280`}/>\n        <h2>{props.monster.name}</h2>\n<p>{props.monster.email}</p>\n    </div>\n)","import React from 'react';\nimport './card-list.css';\nimport {Card} from './../cards/cards';\n\n\nexport const CardList =(props:any) =>( \n<div className='card-list'>\n{props.monsters.map((monster: { id: any; })=>(\n                <Card key={monster.id} monster={monster}></Card>\n            ))\n}\n</div>)","import React from 'react';\nimport './search-bar.css';\n\n\n\nexport const SearchBar =(props:any)=>(\n    <input \n    className='search'\n    type='search'  \n    placeholder={props.placeholder}\n    onChange={props.handleChange}\n     />\n);","import React,{Component} from 'react';\nimport {CardList} from './components/card-list/card-list';\nimport {SearchBar} from './components/search-bar/search-bar';\n\n\n\nexport class CardShow extends Component{\n    constructor(){\n        super();\n        this.state={\n            monsters:[],\n            searchField:'',\n        };\n    }\n\n    handleChange = (e)=> {this.setState({searchField : e.target.value})}\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users=>this.setState({monsters:users}));\n    }\n\n    render(){\n        const {monsters , searchField } =this.state;\n        const filteredMonsters =  monsters.filter(filteredMonster => \n            filteredMonster.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n        /** this is equ  to below 2 lines  */\n        // const monsters = this.state.monsters;        \n        // const searchField =this.state.searchField;\n        return(\n            <div>\n            <h1>monsters</h1>\n            <SearchBar placeholder='Search Monster' handleChange={this.handleChange}/>\n            <CardList monsters={filteredMonsters}>\n            </CardList>\n            </div>\n        );\n    }\n}","import React from 'react';\n\n\nconst UserInput = (props) =>{\nconst inputDivStyle ={\n    border: '2px solid black',\n    margin:'10px 32%',\n    height:'30px', \n    width:'200px',\n    padding:'7px 17px',\n    boxSizing:'border-box',\n}\nreturn (\n<div >\n<input type=\"text\"\nstyle={inputDivStyle}\nonChange={props.onInputChange} \nvalue={props.currentName}\nplaceholder=\"Enter Here\"/>\n</div>\n)\n}\n\nexport default UserInput;","import React from 'react';\n\n\n\nconst UserOutput = (props) =>{\n    const OutputStyle ={\n        border: '2px solid black',\n        padding:'16px',\n        margin:'30px auto',\n        width:'60%',\n        backgroundColor:'lemonchiffon',\n        textAlign:'center'\n    }\n    return(\n        <div style={OutputStyle}>\n        <p>Name :: {props.userName}</p>\n        <p>SurName :: {props.surName} </p>\n        <p>Welcome !! {props.userName} {props.surName} </p>\n        </div>\n    )\n}\n\nexport default UserOutput;\n","import React, { Component } from 'react';\nimport './App.css';\nimport UserInput from './components/UserInput/UserInput';\nimport UserOutput from './components/UserOutput/UserOutput';\n\nconst InstructionDiv ={\n    border: '2px solid black',\n    margin:'auto',\n    // padding:'7px 17px',\n    boxSizing:'border-box',\n    backgroundColor:'white',\n    width:'85%',\n    padding: '20px',\n    boxShadow: \n              'inset 0 -3em 3em skyblue',\n               '0 0  0 2px green':\n               '0.3em 0.3em 1em skyblue',\n  }\n\n  const NameDiv ={\n    border: '2px solid black',\n    margin:' 30px auto',\n    padding:'7px 17px',\n    boxSizing:'border-box',\n    backgroundColor:'lightgrey',\n    width:'70%',\n  }\n  // css \n//   p {\n//     box-shadow: 0 0 0 2em #F4AAB9,\n//                 0 0 0 4em #66CCFF;\n//     margin: 4em;\n//     padding:1em;\n//   }\n\nclass Assesment1 extends Component {\n\n  state = {\n    userName: '',\n    surName:''\n  }\n\n  inputChangeHandler = (event) =>{\n    this.setState({\n      userName : event.target.value,\n    })\n  }\n  inputSurNameChangeHandler = (event) =>{\n    this.setState({\n      surName : event.target.value,\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ol type=\"a\" style={InstructionDiv}>\n          <li>Create TWO new components: UserInput and UserOutput</li>\n          <li>UserInput should hold an input element, UserOutput two paragraphs</li>\n          <li>Output multiple UserOutput components in the App component (any paragraph texts of your choice)</li>\n          <li>Pass a username (of your choice) to UserOutput via props and display it there</li>\n          <li>Add state to the App component (=> the username) and pass the username to the UserOutput component</li>\n          <li>Add a method to manipulate the state (=> an event-handler method)</li>\n          <li>Pass the event-handler method reference to the UserInput component and bind it to the input-change event</li>\n          <li>Ensure that the new input entered by the user overwrites the old username passed to UserOutput</li>\n          <li>Add two-way-binding to your input (in UserInput) to also display the starting username</li>\n          <li>Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets</li>\n        </ol>\n        <div style={NameDiv}>\n        <UserInput onInputChange= {this.inputChangeHandler}\n        currentName={this.state.userName} />\n        <UserInput onInputChange= {this.inputSurNameChangeHandler}\n        surName ={this.state.surName}/>\n        <UserOutput userName={this.state.userName}\n        surName ={this.state.surName}/> \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Assesment1;\n","import React from 'react';\n\nconst validation = ( props ) => {\n    let validationMessage = 'Text long enough';\n\n    if (props.inputLength <= 5) {\n        validationMessage = 'Text too short';\n    }\n\n    return (\n        <div>\n            <p>{validationMessage}</p>\n        </div>\n    );\n};\n\nexport default validation;","import React from 'react';\n\nconst char = (props) => {\n    const style = {\n        display: 'inline-block',\n        padding: '16px',\n        margin: '16px',\n        border: '1px solid black',\n        textAlign: 'center'\n    };\n\n    return (\n        <div style={style} onClick={props.clicked}>\n            {props.character}\n        </div>\n    );\n};\n\nexport default char;","import React, { Component } from 'react';\nimport './App.css';\nimport Validation from './components/Validation/Validation';\nimport Char from './components/Char/Char';\n\n\nconst InstructionDiv ={\n  border: '2px solid black',\n  margin:'auto',\n  // padding:'7px 17px',\n  boxSizing:'border-box',\n  backgroundColor:'white',\n  width:'80%',\n  padding: '20px',\n  boxShadow: \n            'inset 0 -3em 3em skyblue',\n             '0 0  0 2px green':\n             '0.3em 0.3em 1em skyblue',\n}\n// box-shadow: inherit;\n// box-shadow: initial;\n// box-shadow: unset;\nconst charBoxDiv ={\n  border: '2px solid black',\n  margin:' 30px auto',\n  padding:'7px 17px',\n  boxSizing:'border-box',\n  backgroundColor:'lightgrey',\n  width:'70%',\n}\n\nclass CharBox extends Component {\n  state = {\n    userInput: ''\n  }\n\n\n\n  inputChangedHandler = ( event ) => {\n    this.setState( { userInput: event.target.value } );\n  }\n\n  deleteCharHandler = ( index ) => {\n    const text = this.state.userInput.split('');\n    text.splice(index, 1);\n    const updatedText = text.join('');\n    this.setState({userInput: updatedText});\n  }\n\n  render () {\n    const charList = this.state.userInput.split('').map((ch, index) => {\n      return <Char \n        character={ch} \n        key={index}\n        clicked={() => this.deleteCharHandler(index)} />;\n    });\n\n    return (\n      <div className=\"App\">\n        <ol style={InstructionDiv}>\n          <li>Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).</li>\n          <li>Create a new component (=> ValidationComponent) which receives the text length as a prop</li>\n          <li>Inside the ValidationComponent, either output \"Text too short\" or \"Text long enough\" depending on the text length (e.g. take 5 as a minimum length)</li>\n          <li>Create another component (=> CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).</li>\n          <li>Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.</li>\n          <li>When you click a CharComponent, it should be removed from the entered text.</li>\n        </ol>\n        <div style={charBoxDiv}>\n        <p>Hint: Keep in mind that JavaScript strings are basically arrays!</p>\n        <hr />\n        <input\n          type=\"text\"\n          onChange={this.inputChangedHandler}\n          value={this.state.userInput} />\n        <p>{this.state.userInput}</p>\n        <Validation inputLength={this.state.userInput.length} />\n        {charList}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CharBox;\n","import React from 'react';\n\nimport './person-component.css';\n\nconst PersonComponent = props => {\n  return (\n    <div className={'Person'}>\n      <p onClick={props.click}>\n        I'm {props.name} and I am {props.age} years old!\n      </p>\n      <p>{props.children}</p>\n      <input type=\"text\" onChange={props.changed} value={props.name} />\n    </div>\n  );\n};\n\nexport default PersonComponent;\n","import React, { Component } from 'react';\n\nimport  './App.css' ;\nimport PersonComponent from './components/Persons/person-component';\n\nclass Person extends Component {\n  state = {\n    persons: [\n      { id: 'asfa1', name: 'Max', age: 28 },\n      { id: 'vasdf1', name: 'Manu', age: 29 },\n      { id: 'asdf11', name: 'Stephanie', age: 26 }\n    ],\n    otherState: 'some other value',\n    showPersons: false\n  };\n\n  nameChangedHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n\n    // const person = Object.assign({}, this.state.persons[personIndex]);\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState({ persons: persons });\n  };\n\n  deletePersonHandler = personIndex => {\n    // const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({ persons: persons });\n  };\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({ showPersons: !doesShow });\n  };\n\n  render() {\n    let persons = null;\n    let btnClass = '';\n\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return (\n              <PersonComponent\n                click={() => this.deletePersonHandler(index)}\n                name={person.name}\n                age={person.age}\n                key={person.id}\n                changed={event => this.nameChangedHandler(event, person.id)}\n              />\n            );\n          })}\n        </div>\n      );\n\n      btnClass = 'Red';\n    }\n\n    const assignedClasses = [];\n    if (this.state.persons.length <= 2) {\n      assignedClasses.push('red'); // classes = ['red']\n    }\n    if (this.state.persons.length <= 1) {\n      assignedClasses.push('bold'); // classes = ['red', 'bold']\n    }\n\n    return (\n      <div className={'App'}>\n        <h3>Toggle Show of Persons</h3>\n        <p className={assignedClasses.join(' ')}>This is really working!</p>\n        <button className={'btnClass'} onClick={this.togglePersonsHandler}>\n          Toggle Persons\n        </button>\n        {persons}\n      </div>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default Person;\n","import {MyForm} from './form-table';\nimport { UpdateTime } from './virtual_dom';\nimport {Mounting} from './mounting';\nimport {ApiAxios} from './apicall';\nimport { Route, HashRouter as Router, Link } from 'react-router-dom';\nimport NotFound from './notFoundPage';\nimport styled from 'styled-components';\nimport React from 'react';\nimport {AboutMe} from './myself';\nimport {LinksRouting} from './link-routing';\nimport {ReduxRedux} from './react-redux';\nimport {CardShow} from './card-show';\nimport Assesment1 from './assesment1';\nimport CharBox from './charBox';\nimport Person from './person';\n\nconst RenderPart = styled.div`\nwidth:800px;\nfloat: left;\nmargin: 40px 10px 40px 10px;\n`;\n\n// const navigate =()=>{\n//   this.props.history\n// }\nexport class Routing extends React.Component{\n    render(){\n        return(\n            <>\n            <Router>\n     <ul>\n     <li>\n          <Link to=\"/home\">Home</Link>\n        </li>\n       <li>\n         <Link to=\"/links\">LinkRouting</Link>\n       </li>\n        <li>\n          <Link to=\"/myform\">MyForm</Link>\n        </li>\n        <li>\n          <Link to=\"/updatetime\">VirtualDom</Link>\n        </li>\n        <li>\n          <Link to=\"/mounting\">Mounting</Link>\n        </li>\n        <li>\n          <Link to=\"/apiAxios\">API Call</Link>\n        </li>\n        <li>\n          <Link to=\"/reactRedux\">ReduxJs</Link>\n        </li>\n        <li>\n          <Link to=\"/cardShow\">CardShow</Link>\n        </li>\n        <li>\n          <Link to=\"/assesment1\">Assesment1</Link>\n        </li>\n        <li>\n          <Link to=\"/assesment2\">Assesment2</Link>\n        </li>\n        <li>\n          <Link to=\"/person\">Person</Link>\n        </li>\n      </ul>\n     \n    <RenderPart>\n      <switch>\n      <Route path='/home' component={AboutMe}/>\n      <Route path=\"/links\" component={LinksRouting}/>\n      <Route path=\"/myform\" component={MyForm} />\n      <Route path=\"/updatetime\" component={UpdateTime} />\n      <Route path=\"/mounting\" component={Mounting} />\n      <Route path=\"/apiAxios\" component={ApiAxios} />\n      <Route path='/reactRedux' component={ReduxRedux}/>\n      <Route path='/cardShow' component={CardShow}/>\n      <Route path='/assesment1' component={Assesment1}/>\n      <Route path='/assesment2' component={CharBox}/>\n      <Route path='/person' component={Person}/>\n      {/* <button onclick={navigate}></button>  */}\n      </switch>\n    </RenderPart>\n      </Router>\n     </>\n        );\n    }\n}\n// {/* <Route component={NotFound} />  */}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {MyForm} from './form-table';\nimport { UpdateTime } from './virtual_dom';\nimport {Mounting} from './mounting';\nimport {ApiAxios} from './apicall';\nimport { Route, BrowserRouter as Router, Link } from 'react-router-dom';\nimport NotFound from './notFoundPage';\nimport styled from 'styled-components';\nimport {Routing}  from './routing';\n\n\nReactDOM.render(\n  <React.Fragment>\n  <App />\n  <Routing/>\n  {/* <MyForm/>\n  <UpdateTime/>\n <Mounting/> \n<ApiAxios/> */}\n</React.Fragment>,\ndocument.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}